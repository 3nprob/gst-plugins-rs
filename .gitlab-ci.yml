stages:
  - "lint"
  - "test"
  - "extras"

.tarball_setup:
  variables:
    # Only stuff inside the repo directory can be cached
    # Override the CARGO_HOME variable to force its location
    CARGO_HOME: "${CI_PROJECT_DIR}/.cargo_home"
    SODIUM_USE_PKG_CONFIG: "true"
    DEPENDENCIES: |
      curl
      file
      libsodium-dev
      libssl-dev
      liborc-0.4-dev
      libglib2.0-dev
      libgdk-pixbuf2.0-dev
      libgtk-3-dev
      libxml2-dev
      libegl1-mesa
      libgles2-mesa
      libgl1-mesa-dri
      libgl1-mesa-glx
      libwayland-egl1-mesa
      xz-utils
  before_script:
    - apt-get update -yqq
    - apt-get install -yqq --no-install-recommends $DEPENDENCIES

    - mkdir -p precompiled-gst && cd precompiled-gst

    - curl -L https://people.freedesktop.org/~slomo/gstreamer-1.16.1.tar.xz | tar xJ
    - sed -i "s;prefix=/root/gstreamer;prefix=$PWD/gstreamer;g" $PWD/gstreamer/lib/x86_64-linux-gnu/pkgconfig/*.pc
    - export PKG_CONFIG_PATH=$PWD/gstreamer/lib/x86_64-linux-gnu/pkgconfig
    - export GST_PLUGIN_SYSTEM_PATH=$PWD/gstreamer/lib/x86_64-linux-gnu/gstreamer-1.0
    - export GST_PLUGIN_SCANNER=$PWD/gstreamer/libexec/gstreamer-1.0/gst-plugin-scanner
    - export PATH=$PATH:$PWD/gstreamer/bin
    - export LD_LIBRARY_PATH=$PWD/gstreamer/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH

    - cd "${CI_PROJECT_DIR}"
  cache:
    key: "gst"
    paths:
      - "${CARGO_HOME}"

.cargo test:
  extends: '.tarball_setup'
  stage: "test"
  script:
    - rustc --version
    - cargo build --color=always --all
    - G_DEBUG=fatal_warnings cargo test --color=always --all
    - cargo build --color=always --all --examples --all-features
    - G_DEBUG=fatal_warnings cargo test --color=always --all --examples --all-features

#test 1.39:
  # 1.39 img
  # https://hub.docker.com/_/rust/
#  image: "rust:1.39-slim-buster"
#  extends: '.cargo test'

#test stable:
  # Stable img
  # https://hub.docker.com/_/rust/
#  image: "rust:slim-buster"
#  extends: '.cargo test'

test beta:
  # https://hub.docker.com/_/rust/
  image: "rust:slim-buster"
  extends: '.tarball_setup'
  script:
    - export CARGO_HOME=/usr/local/cargo # will install a new toolchain, reset CARGO_HOME to its default path
    - rustup toolchain install beta
    - export CARGO_HOME=${CI_PROJECT_DIR}/.cargo_home
    - rustup override set beta
    - rustc --version
    - cargo build --color=always --all
    - G_DEBUG=fatal_warnings cargo test --color=always --all
    - cargo build --color=always --all --examples --all-features
    - G_DEBUG=fatal_warnings cargo test --color=always --all --examples --all-features

test nightly:
  # Nightly
  # https://hub.docker.com/r/rustlang/rust/
  image: "rustlang/rust:nightly-buster-slim"
  allow_failure: true
  extends: '.cargo test'

rustfmt:
  image: "rust:slim-buster"
  extends: '.tarball_setup'
  stage: "lint"
  script:
    - export CARGO_HOME=/usr/local/cargo # will install a new toolchain, reset CARGO_HOME to its default path
    - rustup toolchain install beta
    - rustup component add rustfmt --toolchain beta
    - export CARGO_HOME=${CI_PROJECT_DIR}/.cargo_home
    - rustup override set beta
    - rustc --version
    - cargo fmt --version
    - cargo fmt -- --color=always --check

clippy:
  extends: '.tarball_setup'
  image: "rust:slim-buster"
  stage: 'extras'
  script:
    - export CARGO_HOME=/usr/local/cargo # will install a new toolchain, reset CARGO_HOME to its default path
    - rustup toolchain install beta
    - rustup component add clippy --toolchain beta
    - export CARGO_HOME=${CI_PROJECT_DIR}/.cargo_home
    - rustup override set beta
    - rustc --version
    - cargo clippy --color=always --all --all-features -- -A clippy::redundant_pattern_matching -A clippy::single_match -A clippy::cast_lossless

audit:
  extends: '.tarball_setup'
  image: "rust:slim-buster"
  stage: 'extras'
  only:
    - schedules
  script:
    - cargo install --force cargo-audit
    - cargo audit --deny-warnings
